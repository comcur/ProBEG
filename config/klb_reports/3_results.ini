[_global]
main_model: Klb_result
# fields_for_select_related: event_raw  event_raw__series race  klb_person klb_person__runner klb_participant race__distance klb_participant__klb_person result
fields_for_select_related: event_raw__series klb_person race__distance race__distance_real klb_participant__klb_person result
filter: {'event_raw__start_date__year' : klb_year}
process_by_month: event_raw__start_date__month
order_by: event_raw__start_date race__distance__distance_type -race__distance__length id

# only_fields:  race__distance race__distance_real klb_participant__klb_person result
# WITH runner: only_fields: id event_raw_id race__event_id race_id result__race_id klb_person_id klb_person klb_participant__klb_person_id klb_participant_id klb_person__gender klb_person__runner klb_person__runner__gender klb_person__birthday klb_person__runner__birthday time_seconds_raw klb_score bonus_score event_raw__name event_raw__number event_raw__series event_raw__series__name event_raw__start_date event_raw__start_time event_raw__finish_date race__distance__name race__distance__distance_type race__distance__length race__distance_real__name race__distance_real__distance_type race__distance_real__length klb_person__lname klb_person__fname klb_person__midname

only_fields: id event_raw_id race__event_id race_id result__race_id klb_person_id klb_person klb_participant__klb_person_id klb_participant_id klb_person__gender klb_person__birthday time_seconds_raw klb_score bonus_score event_raw__name event_raw__number event_raw__series event_raw__series__name event_raw__start_date event_raw__start_time event_raw__finish_date race__distance__name race__distance__distance_type race__distance__length race__distance_real__name race__distance_real__distance_type race__distance_real__length klb_person__lname klb_person__fname klb_person__midname

sheet_name: 3. Результаты

id_for_statistics: models.KLB_REPORT_STAT_RESULTS

# Deafult values:
;show_datetime: 'yes'

[id]
value: .id
access: editor
xlsx.type: int


[event_id]
value: .event_raw_id
value2: .race.event_id
access: editor
xlsx.type: int
width.min: 5.43

[Забег]  ;Model Event
value: .event_raw.__unicode__()
f.text_wrap: yes
xlsx.type: str
width.equal: 40

[*Дата старта]
value: .event_raw.start_date
access: special

[*dist type]
value: .race.distance.distance_type
access: special

[*dist_len]
value: .race.distance.length
access: special

[Race_id]
value: .race_id
# value2: .result.race_id
access: editor
xlsx.type: int
width.min: 4

[*distance_raw]
value: .distance_raw
access: special  ; отключено: Date: Tue, 12 Jun 2018 13:49:00 -0400

[Дистанция]
# value: .race.__unicode__()  ; changed: Date: Tue, 12 Jun 2018 13:49:00 -0400
value: .race.distance.__unicode__()
xlsx.type: str
width.min: 10

[Дистанция факт.]
; added: Date: Tue, 12 Jun 2018 13:49:00 -0400
value: .race.distance_real.__unicode__()
may_be_none = yes
xlsx.type: str
width.min: 10
f.align: right


[*Dist_id]
value: .race.distance_id
# access: editor
access: special
xlsx.type: int

[*Дист]
value: .race.distance.__unicode__()
access: special
xlsx.type: str


[*Dist_r_id]
value: .race.distance_real_id
# access: editor
access: special


#[*Дист_р]
#value: .race.distance_real.__unicode__()

[person_id]  ; не требовалось вроде
value: .klb_person_id
value2: .klb_participant.klb_person_id
access: editor
xlsx.type: int
width.min: 6.5

[*Runner_id]  ; ЕСТЬ РАСХОЖДЕНИЯ (15 ШТ. value дает число, value2 дает None)
value: .klb_person.runner.id  ; do not change to runner_id !
value2: .result.runner_id  ; Do not use this value
access: special
xlsx.type: int

[*Бегун]
value: .klb_person.runner.__unicode__()
access: special
xlsx.type: str

[participant_id]
value: .klb_participant_id
access: editor
xlsx.type: int
width.min: 6.7


[КЛБ-участник]
# value: .klb_participant.__unicode__()
value: .klb_person.__unicode__()
# Вроде логичнее было бы .klb_participant.__unicode__(), но он в итоге все равно обращается 
# к klb_person. Поэтому делаю это напрямую.
f.text_wrap: yes
xlsx.type: str
width.equal: 35

[Пол]
value: .klb_person.gender
eval: dict(models.GENDER_CHOICES)[{val}][0]
width.equal: 3.6
f.align: center
xlsx.type: str

# value2: .klb_person.runner.gender ;???
# eval2: dict(models.GENDER_CHOICES)[{val}][0]

[Дата рождения]
value: .klb_person.birthday
# value2: .klb_person.runner.birthday ;???
access: editor
xlsx.type: str
width.equal: 10
f.align: right

[Год рождения]
value: .klb_person.birthday.year
access: client
xlsx.type: int
width.equal: 9.8

[Время]
value: .time_seconds_raw
eval: models.secs2time({val})
xlsx.type: str
width.equal: 9

[Спортивные очки]
value: .klb_score
xlsx.type: float
f.num_format: 0.000
width.int_part_plus: 4
width.min: 12

[Бонусы]
value: .bonus_score
xlsx.type: float
f.num_format: 0.000
width.int_part_plus: 4
width.min: 7.14

[Сумма]
value: .total_score()
xlsx.type: float
f.num_format: 0.000
width.int_part_plus: 4
width.min: 6.57
